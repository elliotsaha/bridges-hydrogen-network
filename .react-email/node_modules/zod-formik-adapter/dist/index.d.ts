import { z } from "zod";
export declare class ValidationError extends Error {
    name: string;
    inner: Array<{
        path: string;
        message: string;
    }>;
    constructor(message: string);
}
/**
 * Wrap your zod schema in this function when providing it to Formik's validation schema prop
 * @param schema The zod schema
 * @returns An object containing the `validate` method expected by Formik
 */
export declare function toFormikValidationSchema<T>(schema: z.ZodSchema<T>, params?: Partial<z.ParseParams>): {
    validate: (obj: T) => Promise<void>;
};
/**
 * Wrap your zod schema in this function when providing it to Formik's validate prop
 * @param schema The zod schema
 * @returns An validate function as expected by Formik
 */
export declare function toFormikValidate<T>(schema: z.ZodSchema<T>, params?: Partial<z.ParseParams>): (values: T) => Promise<Record<string, string> | undefined>;
